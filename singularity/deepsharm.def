#########################################################################
## This is for the following environment.
## - Ubuntu  20.04
## - CUDA    11.3.1 (cuDNN 8.2.1)
## - Python  3.8.6
## - PyTorch 1.12.0+cu113 (torchvision 0.13.0+cu113)
## - OpenCV  4.2.0.34(contrib)
##
## You can change the versions by editing the script below, but you need
## to make the
##
#########################################################################

Bootstrap: docker
From: ubuntu:20.04


%post
    export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
    export PYENV_ROOT=/opt/pyenv
    export PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
    export PYTHONNOUSERSITE=1

    #### Some packages for cuda, pyenv, and opencv installation
    apt-get -y update
    apt-get -y install gcc curl wget git zlib1g-dev libbz2-dev libssl-dev libreadline-dev libjpeg-dev gnupg libgl1-mesa-dev libglib2.0-0 libffi-dev liblzma-dev build-essential
    
    #### MeshlabServer
    apt-get -y install meshlab

    mkdir -p /workspace
    cd /workspace

    #### mitsuba dependencies
    apt-get -y install clang-9 libc++-9-dev libc++abi-9-dev cmake ninja-build libz-dev libpng-dev libjpeg-dev libxrandr-dev libxinerama-dev libxcursor-dev python3-dev python3-distutils python3-setuptools ffmpeg

    #### PyMesh dependencies
    apt-get -y install libgmp-dev libgmpxx4ldbl libmpfr-dev libtbb-dev libeigen3-dev libboost-dev libboost-thread-dev

    #### CUDA library (see https://developer.nvidia.com/cuda-downloads)
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
    mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
    wget https://developer.download.nvidia.com/compute/cuda/11.3.1/local_installers/cuda-repo-ubuntu2004-11-3-local_11.3.1-465.19.01-1_amd64.deb
    dpkg -i cuda-repo-ubuntu2004-11-3-local_11.3.1-465.19.01-1_amd64.deb
    apt-key add /var/cuda-repo-ubuntu2004-11-3-local/7fa2af80.pub
    apt-get update
    apt-get -y install cuda
    
    export PATH="/usr/local/cuda-11.3/bin:$PATH"


    #### cuDNN (see https://developer.download.nvidia.com/compute/redist/cudnn/)
    wget https://developer.download.nvidia.com/compute/redist/cudnn/v8.2.1/Ubuntu20_04-x64/libcudnn8_8.2.1.32-1+cuda11.3_amd64.deb
    dpkg -i libcudnn8_8.2.1.32-1+cuda11.3_amd64.deb
    wget https://developer.download.nvidia.com/compute/redist/cudnn/v8.2.1/Ubuntu20_04-x64/libcudnn8-dev_8.2.1.32-1+cuda11.3_amd64.deb
    dpkg -i libcudnn8-dev_8.2.1.32-1+cuda11.3_amd64.deb
    
    export LD_LIBRARY_PATH="/usr/local/cuda-11.3/lib64:$LD_LIBRARY_PATH"

    #### Python by pyenv
    curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
    pyenv install 3.8.6
    pyenv global 3.8.6
    eval "$(pyenv init -)"

    python3 -m pip install --upgrade pip==22.2.2
    
    python3 -m pip install mitsuba==3.0.1 fastsweep==0.1.0 numpy==1.22.4 tqdm==4.64.0 matplotlib==3.5.2
    python3 -m pip install torch==1.12.0+cu113 torchvision==0.13.0+cu113 torchaudio==0.12.0+cu113 --extra-index-url https://download.pytorch.org/whl/cu113
    python3 -m pip install pytorch-lightning==1.7.0

    python3 -m pip install opencv-contrib-python==4.10.0.84 jupyterlab==3.4.4 notebook==6.4.12 ipywidgets==7.7.1 moderngl==5.6.4 open3d==0.14.1 numba==0.56.0 tensorboardX==2.5.1 rawpy==0.17.1 trimesh==3.13.0 rtree==1.0.0 lpips==0.1.4 scikit-image==0.19.3 plotly==5.9.0 commentjson==0.9.0 plyfile==0.7.4 redner-gpu==0.4.28 black==22.6.0 usort==1.0.4 flake8==5.0.4 flake8-bugbear==22.7.1 flake8-comprehensions==3.10.0 seaborn==0.11.2 scikit-fmm==2024.5.29 pandas==1.4.3

    python3 -m pip install ninja==1.10.2.3 imageio==2.21.0 imageio-ffmpeg==0.4.7 PyOpenGL==3.1.6 glfw==2.5.4 xatlas==0.0.6 gdown==4.5.1
    TCNN_CUDA_ARCHITECTURES="70,75,80,86" python -m pip install ninja git+https://github.com/NVlabs/tiny-cuda-nn/@daf9628c8d4500aee29935e15cff58a359277ad0#subdirectory=bindings/torch # python3 -m pip install pip install git+https://github.com/NVlabs/tiny-cuda-nn/@v1.6#subdirectory=bindings/torch
    python3 -m pip install git+https://github.com/NVlabs/nvdiffrast/@v0.3.3
    $PYENV_ROOT/versions/3.8.6/bin/imageio_download_bin freeimage

    # PyMesh
    mkdir /opt/third_party
    git clone https://github.com/PyMesh/PyMesh.git /opt/third_party/PyMesh
    export PYMESH_PATH="/opt/third_party/PyMesh"
    cd $PYMESH_PATH
    git checkout 384ba882b7558ba6e8653ed263c419226c22bddf
    git submodule update --init
    python3 setup.py build
    python3 setup.py install
    python3 -m pip install nose==1.3.7
    python -c "import pymesh; pymesh.test()"

    # largesteps
    python3 -m pip install largesteps==0.2.1

    python3 -m pip install pycalib-simple==2024.9.22.2

    # lightglue
    git clone https://github.com/cvg/LightGlue.git@edb2b838efb2ecfe3f88097c5fad9887d95aedad /opt/third_party/LightGlue && cd /opt/third_party/LightGlue
    python3 -m pip install -e .

%environment
    export PYENV_ROOT=/opt/pyenv
    export PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
    export PYTHONNOUSERSITE=1
